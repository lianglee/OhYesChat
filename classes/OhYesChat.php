<?php
/**
 * OhYesChat
 * @website Link: https://informatikon.com
 * @package Informatikon.Elgg
 * @subpackage Chat
 * @author $arsalanshah.informatikon
 * @copyright All right reserved Informatikon Technologies 2014.
 * @ide The Code is Generated by Liang Lee php IDE.
 */ 
 
class OhYesChat {

/**
* LoadJs OhYesChat JS;
*
* @access system
* @return return;
*/
public static function loadJs(){
   elgg_load_js('ohyeschat.js');
}
/**
* LoadCss OhYesChat CSS;
*
* @access system
* @return return;
*/
public static function loadCSS(){
   elgg_load_css('ohyeschat.css');		
}
/**
* Get entity by id
*
* @access system
* @return return;
*/
public function getEntity($guid){
if(isset($guid)){
	 return get_entity($guid);
}
 return false;
}
/**
* Detect Mobile Device
*
* @access system
* @return return;
*/
public static function FromMobile() {
	$user_agent = $_SERVER['HTTP_USER_AGENT'];
	$mobiles_pattern = '/(alcatel|amoi|android|avantgo|blackberry|benq|cell|cricket|docomo|elaine|htc|iemobile|iphone|ipaq|ipod|j2me|java|midp|mini|mmp|mobi|motorola|nec-|nokia|palm|panasonic|philips|phone|sagem|sharp|sie-|smartphone|sony|symbian|t-mobile|telus|up\.browser|up\.link|vodafone|wap|webos|wireless|xda|xoom|zte)/i';
	if(preg_match($mobiles_pattern , $user_agent)) {
		return true;
	} 
    return false;
}
/**
* Register chat actions
*
* @access system
* @return return;
*/
public static function actions(){
         return array(
					  'send', 'refresh', 'removetab'
					  );	
}
/**
* Data Add
*
* @access system
* @return return;
*/
public static function Data($query, $type){
    global $CONFIG;	
	$query = str_replace('prefixes_', $CONFIG->dbprefix, $query);
	if(!empty($query) && $type == 'get'){
	  return get_data($query);	
	}
	if(!empty($query) && $type == 'delete'){
	  return delete_data($query);	
	}
	if(!empty($query) && $type == 'add'){
	  return insert_data($query);	
	}
	if(!empty($query) && $type == 'run'){
	  return run_sql_script($query);	
	}
}
/**
* Countnew messages
*
* @access system
* @return return;
*/
public static function countNew(){
		global $CONFIG;	
	 	$user = elgg_get_logged_in_user_entity()->guid;
		$count = "SELECT * FROM {$CONFIG->dbprefix}ohyes_chat 
		              WHERE(reciever='$user' AND view='0')";
        return count(OhYesChat::Data($count, 'get'));
}
/**
* Countnew messages by id
*
* @access system
* @return return;
*/
public static function countNewById($friend){
		global $CONFIG;	
	 	$user = elgg_get_logged_in_user_entity()->guid;
		$count = "SELECT * FROM `{$CONFIG->dbprefix}ohyes_chat` 
		          WHERE(reciever='{$user}' AND sender='{$friend}' AND view='0');";
        return count(OhYesChat::Data($count, 'get'));
}
/**
* Get new message {Object}
*
* @access system
* @return {Object};
*/
public static function getNew($friend){
		global $CONFIG;	
	 	$user = elgg_get_logged_in_user_entity()->guid;
		$count = "SELECT * FROM `{$CONFIG->dbprefix}ohyes_chat` 
		          WHERE(reciever='{$user}' AND sender='{$friend}' AND view='0');";
        return OhYesChat::Data($count, 'get');
}
/**
* Get new message {Object}
*
* @access system
* @return {Object};
*/
public static function getLatest($offset){
		global $CONFIG;	
		$get = "SELECT * FROM `{$CONFIG->dbprefix}ohyes_chat` ORDER by mid DESC";
        $messages = OhYesChat::Data($get, 'get');
		if((int)$offset && !empty($offset)){
		   $latest = array_chunk($messages , $offset);
		   return $latest[0];	
		}
		else {
		 return $messages;	
		}
}
/**
* Get new message {Object}
*
* @access system
* @return {Object};
*/
public static function getTotal($offset){
		global $CONFIG;	
		$get = "SELECT * FROM `{$CONFIG->dbprefix}ohyes_chat`";
        return count(OhYesChat::Data($get, 'get'));
}
/**
* Get new message {Object}
*
* @access system
* @return {Object};
*/
public static function getNewAll($params = array()){
		global $CONFIG;	
		if(empty($params)){
		 $params = array('sender', 'message');	
		}
		$params = implode(',' , $params);
	 	$user = elgg_get_logged_in_user_entity()->guid;
		$count = "SELECT $params FROM `{$CONFIG->dbprefix}ohyes_chat` 
		          WHERE(reciever='{$user}' AND view='0');";
        return OhYesChat::Data($count, 'get');
}
/**
* GeMessage
*
* @access system
* @return return;
*/
public static function getMessages($sender, $friend, $limit = 'LIMIT 20'){
		global $CONFIG;	
        $get = "SELECT * FROM {$CONFIG->dbprefix}ohyes_chat 
		WHERE(sender='{$sender}' AND reciever='{$friend}' 
		OR sender='{$friend}' AND reciever='$sender') ORDER BY mid DESC {$limit};";
        return OhYesChat::Data($get, 'get');
}
/**
* Get online friends
*
* @access system
* @return return;
*/
public static function OnlineFriends($entity){
$db_prefix = elgg_get_config('dbprefix');
$time = time();
$friend['relationship'] = 'friend';
$friend['relationship_guid'] = $entity->guid;

$friend['type'] = 'user';
$friend['limit'] = false;

$friend['joins'][] =  "join {$db_prefix}users_entity u on e.guid = u.guid";
$friend['wheres'][] = "u.last_action > {$time} - 600";
$friend['order_by'] = "u.last_action desc";

$friends = elgg_get_entities_from_relationship($friend);	
return $friends;	
}
/**
* Count Online Friends
*
* @access system
* @return return;
*/
public static function countOnline($entity){
   return count(OhYesChat::OnlineFriends($entity));
}
/**
* Get friend status
*
* @access system
* @return return;
*/
public static function userStatus($user){
$friend = get_user($user); 
   if($friend->last_action > time() - 600){
		 return 'online';  
	  } 
	  else {
		return  'offline';  
	  }	
}
/**
* Return status icon
*
* @access system
* @return return;
*/
public static function getStatusClass($friend){
if(OhYesChat::userStatus($friend) == 'online'){
  return 'OhYesChat-Icon-Onine';	
} 
else {
  return 'OhYesChat-Icon-Offline';
}	
}
/**
* Send a message to user;
*
* @access system
* @return return;
*/
public function SendMessage($reciever , $message){
	  global $CONFIG;	
	  $this->sender = elgg_get_logged_in_user_entity()->guid;
	  $this->time = time();	  
		            $this->reciever = (int)$reciever;
	  if(!empty($this->reciever) && !empty($message)){			
			    	if(OhYesChat::Data("INSERT INTO {$CONFIG->dbprefix}ohyes_chat 
								   (`reciever`, `sender`, `message`, `view`, `time`) VALUES
								   ('$this->reciever', '$this->sender', '$message' ,'0', '$this->time')", 'add')){
					     return true;	
					}
	  }
    return false;	  
}
/**
* String limit srlen
*
* @access system
* @return return;
*/
public static function sttl($str, $limit = NULL, $dots = true){
if(isset($str) 
		 && isset($limit)){
                 if(strlen($str) > $limit){
	               if($dots == true){
                        return substr($str, 0, $limit).'...';		
	                      } elseif($dots == false){
		                     return substr($str, 0, $limit);
	                      }
                      }
                   elseif(strlen($str) < $limit){
	           return $str;   	   
        }
}
  return false; 
}
/**
* Setup OhYesChat
*
* @access system
* @return return;
*/
public function Setup(){
	global $CONFIG;	
	$plugin = elgg_get_plugins_path().'OhYesChat/setup/';
	try {
	OhYesChat::Data("{$plugin}ohyeschat.sql", 'run');
	} catch (Exception $e) {
			$msg = $e->getMessage();
			if (strpos($msg, 'already exists')) {
				$msg = elgg_echo('install:error:tables_exist');
			}
			register_error($msg);
			return false;
    }	
}
/**
* Register a default emoticons
*
* @access system
* @return message;
*/
public static function loadIcons(){
 $icon = elgg_get_site_url().'mod/OhYesChat/images/emoticons/';
 $icons = array(
	        ':(' => "<img src='{$icon}ohyeschat-sad.gif'/>",
	        ':)' => "<img src='{$icon}ohyeschat-smile.gif '/>",
	        '=D' => "<img src='{$icon}ohyeschat-happy.gif '/>",
	        ';)' => "<img src='{$icon}ohyeschat-wink.gif '/>",
            ':p' => "<img src='{$icon}ohyeschat-tongue.gif'/>",
            '8|' => "<img src='{$icon}ohyeschat-sunglasses.gif'/>",
            'o.O' => "<img src='{$icon}ohyeschat-confused.gif '/>",
            ':O' => "<img src='{$icon}ohyeschat-gasp.gif '/>",
            ':*' => "<img src='{$icon}ohyeschat-kiss.gif'/>",
            'a:' => "<img src='{$icon}ohyeschat-angel.gif'/>",
            ':h:' => "<img src='{$icon}ohyeschat-heart.gif'/>",
            '3:|' => "<img src='{$icon}ohyeschat-devil.gif'/>",
	        'u:' => "<img src='{$icon}ohyeschat-upset.gif'/>",
            ':v' => "<img src='{$icon}ohyeschat-pacman.gif'/>",
            'g:' => "<img src='{$icon}ohyeschat-grumpy.gif'/>",
            '8)' => "<img src='{$icon}ohyeschat-glasses.gif'/>",
            "c:" => "<img src='{$icon}ohyeschat-cry.gif'/>",
				 );
 return $icons;
						  
}
/**
* Replace icons
*
* @access system
* @return message;
*/
public static function replaceIcon($message){
	$icon = elgg_get_site_url().'mod/OhYesChat/images/emoticons/';
	foreach(OhYesChat::loadIcons() as $codes => $imgs){	
	 	$code[] = $codes;
		$img[] = $imgs;
	}
 	$icons = str_replace($code , $img, $message);
	return $icons;							 
	
}
/**
* Disable XSS attack
*
* @access system
* @return message;
*/
public static function messageValidate($message){
  return strip_tags($message);	
}
/**
* View modules
*
* @params $type{red, blue, green}
* @params $title: title of module
* @params $contents: inner contents of module
*
* @return message;
*/
public static function newModule($type, $title, $contents, $vars = array()){
   $contents = elgg_view("ohyes/chat/admin/modules/contents/{$contents}", $vars);
   return elgg_view("ohyes/chat/admin/modules/{$type}", array(
								 'title' =>  $title,
								 'contents' => $contents,
							));	
}
/**
* Register a menu item
* @access system
* @return return;
*/
public static function register_menu_item($name, $data = array()){
	global $OhYesChat;
	$context = trim($name);
	if (empty($name)) {
		return false;
	}
  return  $OhYesChat->menu[$name][] = $data;
}
/**
* View registered menu
* @access system
* @return return;
*/	
public static function view_menu($menu, $file){
	global $OhYesChat;	
if(!empty($file) && !empty($menu)){	
	return elgg_view("ohyes/chat/menu/{$file}", array(
							   'menu' => $OhYesChat->menu[$menu],		   
							   ));	
}
return false;
}
/**
* Delete Messsages
*
* Delete older than one 7 days
* @NOTE: action is not reversable
*
*/
public function messagesDelete(){
 global $CONFIG;	
 $delete = "DELETE FROM {$CONFIG->dbprefix}ohyes_chat 
            WHERE time < UNIX_TIMESTAMP(
							DATE_SUB(NOW(), INTERVAL 7 DAY)
						                )";
 if(OhYesChat::Data($delete, 'delete')){
	 return true;
 }
 return false;
}
/**
* View System Messages
*
* @params $action{true}
* @params $msg: message key
*
* @return message;
*/
public static function chatSystemMessages(){
 $action = get_input('action');
 $msg = get_input('msg');
 if($action == true){	 
	 return elgg_echo(base64_decode($msg));
 }
return false; 
}
/**
* Forward request with message
*
* @params $message{message id}
*
* @return message;
*/
public static function forwardSystemMessage($message){
  if(!empty($message)){
	 $msg  = base64_encode($message); 
	 forward("ohyeschat/admin?action=true&msg={$msg}");  
  }
}
/**
* Register default menus
* @access admin
* @return arrays;
*/
public static function RegisterMenus(){
   $menu = new OhYesChat;
   $url = elgg_get_site_url();
   $menu->register_menu_item('admin', array(
					'text' => elgg_echo('ohyes:chat:home'),
					'url' => "{$url}ohyeschat/admin"
					   ));
   $menu->register_menu_item('admin', array(
					'text' => elgg_echo('ohyes:track:messages'),
					'url' => "{$url}ohyeschat/admin/getuser"
					   ));
   $menu->register_menu_item('admin', array(
					'text' => elgg_echo('ohyes:back:admin'),
					'url' => "{$url}admin"
				          ));
   $menu->register_menu_item('admin', array(
					'text' => elgg_echo('ohyes:bug:report'),
					'url' => "http://github.com/lianglee/OhYesChat/issues"
				    	 ));
   $menu->register_menu_item('admin', array(
					'text' => elgg_echo('ohyes:authors'),
					'url' => "http://www.informatikon.com"
					 ));	
    elgg_register_menu_item('page', array(
		'name' => 'ohyeschat',
		'href' => 'ohyeschat/admin',
		'text' => elgg_echo('ohyeschat'),
		'context' => 'admin',
		'priority' => 1,
		'section' => 'administer'
	)); 
}
/**
* Check Chat Version
* @access admin
* @return array;
*/
public function checkUpdate(){
	global $OhYesChat;
	$plugin = elgg_get_plugins_path().'OhYesChat/';
	$url = 'https://api.github.com/repos/lianglee/OhYesChat/contents/manifest.xml';
    $args['method'] = 'GET';
    $args['header'] = "Accept-language: en\r\n" .
              "Cookie: ohyes=chat\r\n" .
              "User-Agent: Mozilla/5.0\r\n" ;
    $options['http'] = $args;
    $context = stream_context_create($options);
    $file = file_get_contents($url, false, $context);
    $data = json_decode($file);
    $file = simplexml_load_string(base64_decode($data->content));
    require_once("{$plugin}version.php");
	if(empty($file->version)){
	   return array('ohyeschat:new:version:error');	
	}
	if($file->version > $OhYesChat->release){
		return array('ohyeschat:new:version:avaialbe', $file->version);	
	} 
	elseif($OhYesChat->release = $file->version){
	    return  array('ohyeschat:new:version:latest', $OhYesChat->release);	
	}
}
/**
* Check News
* @access admin
* @return array;
*/
public function checkNews(){
	$url = 'http://www.informatikon.com/api/repos/OhYesChat/news';
     $data = file_get_contents($url);
	if(empty($data)){
	   return elgg_echo('ohyeschat:news:error');	
	}
	elseif(!empty($data)){
	    return  $data;	
	}
}
}//class
